<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jobagent.mapper.JobMapper">

    <select id="pageQuery" resultType="com.jobagent.entity.Job">
        SELECT j.*, c.name companyName, c.scale, c.stage, c.welfare, sent_cv, viewed FROM job j, company c, user_job u
        <where>
            <!-- 关键词搜索（标题或描述） -->
            <if test="jobPageDTO.keyword != null and jobPageDTO.keyword != ''">
                AND (j.title LIKE CONCAT('%', #{jobPageDTO.keyword}, '%') OR j.description LIKE CONCAT('%', #{jobPageDTO.keyword}, '%'))
            </if>

            <!-- 多选List字段 -->
            <if test="jobPageDTO.city != null and jobPageDTO.city != ''">
                AND j.city IN
                <foreach collection="jobPageDTO.getCityList()" item="exp" open="(" separator="," close=")">
                    #{exp}
                </foreach>
            </if>
            <if test="jobPageDTO.title != null and jobPageDTO.title != ''">
                AND j.title IN
                <foreach collection="jobPageDTO.getTitleList()" item="exp" open="(" separator="," close=")">
                    #{exp}
                </foreach>
            </if>
            <if test="jobPageDTO.salary != null and jobPageDTO.salary != ''">
                AND j.salary IN
                <foreach collection="jobPageDTO.getSalaryList()" item="exp" open="(" separator="," close=")">
                    #{exp}
                </foreach>
            </if>
            <if test="jobPageDTO.experience != null and jobPageDTO.experience != ''">
                AND j.experience IN
                <foreach collection="jobPageDTO.getExperienceList()" item="exp" open="(" separator="," close=")">
                    #{exp}
                </foreach>
            </if>

            <if test="jobPageDTO.degree != null and jobPageDTO.degree != ''">
                AND j.degree IN
                <foreach collection="jobPageDTO.getDegreeList()" item="deg" open="(" separator="," close=")">
                    #{deg}
                </foreach>
            </if>

            <if test="jobPageDTO.industry != null and jobPageDTO.industry != ''">
                AND j.industry IN
                <foreach collection="jobPageDTO.getIndustryList()" item="ind" open="(" separator="," close=")">
                    #{ind}
                </foreach>
            </if>

            <!-- 多选字段（来自 company 表） -->
            <if test="jobPageDTO.scale != null and jobPageDTO.scale != ''">
                AND c.scale IN
                <foreach collection="jobPageDTO.getScaleList()" item="sca" open="(" separator="," close=")">
                    #{sca}
                </foreach>
            </if>
            <if test="jobPageDTO.stage != null and jobPageDTO.stage != ''">
                AND c.stage IN
                <foreach collection="jobPageDTO.getStageList()" item="sta" open="(" separator="," close=")">
                    #{sta}
                </foreach>
            </if>

            AND j.companyId = c.id
            AND u.user_id = #{jobPageDTO.userId}
            AND u.job_id = j.id
        </where>
    </select>

    <delete id="deleteUserJobByIds" parameterType="com.jobagent.dto.DeleteJobDTO">
        DELETE FROM user_job
        WHERE user_id = #{deleteJobDTO.user_id}
        AND job_id IN
        <foreach collection="deleteJobDTO.job_ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteJobByIds" parameterType="com.jobagent.dto.DeleteJobDTO">
        DELETE FROM job
        WHERE id IN
        <foreach collection="deleteJobDTO.job_ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectJobIdIfExists" parameterType="com.jobagent.entity.JobInfo" resultType="Integer">
        SELECT id
        FROM job
        WHERE city = #{city}
              AND companyId = #{companyId}
              AND jobName = #{jobName}
    </select>

    <select id="getJobList" resultType="com.jobagent.entity.Job">
        SELECT j.*, c.name companyName, c.scale, c.stage, c.welfare, sent_cv, viewed
        FROM job j, company c, user_job u
        WHERE j.id IN
        <foreach collection="jobListDTO.getJobIdsList()" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
            AND j.companyId = c.id
            AND u.user_id = #{jobListDTO.userId}
            AND u.job_id = j.id
    </select>

    <insert id="insertJob" parameterType="com.jobagent.entity.JobInfo" useGeneratedKeys="true" keyProperty="jobId">
        INSERT INTO job (
            securityId,
            jobName,
            jobType,
            companyId,
            url,
            salary,
            salaryFloor,
            salaryCeiling,
            crawlDate,
            city,
            region,
            experience,
            degree,
            industry,
            title,
            skills,
            description
        ) VALUES (
             #{securityId},
             #{jobName},
             #{jobType},
             #{companyId},
             #{url},
             #{salary},
             #{salaryFloor},
             #{salaryCeiling},
             #{crawlDate},
             #{city},
             #{region},
             #{experience},
             #{degree},
             #{industry},
             #{title},
             #{skills},
             #{description}
         )
    </insert>

    <insert id="insertCompanyIfNotExists" parameterType="com.jobagent.entity.JobInfo">
        INSERT INTO company (id, name, stage, scale, welfare)
        SELECT
            #{companyId},
            #{companyName},
            #{stage},
            #{scale},
            #{welfare}
            WHERE NOT EXISTS (
                SELECT 1 FROM company WHERE id = #{companyId}
            )
    </insert>

    <insert id="insertUserJobIfNotExists" parameterType="map">
        INSERT INTO user_job (user_id, job_id, viewed, sent_cv, filter_hash)
        SELECT
            #{userId},
            #{jobId},
            0,
            0,
            #{filterHash}
            WHERE NOT EXISTS (
                SELECT 1 FROM user_job WHERE user_id = #{userId} AND job_id = #{jobId} AND filter_hash = #{filterHash}
            )
    </insert>

    <update id="updateDescription" parameterType="com.jobagent.entity.JobInfo">
        UPDATE job
        SET description = #{description}
        WHERE city = #{city}
          AND companyId = #{companyId}
          AND jobName = #{jobName}
    </update>

</mapper>